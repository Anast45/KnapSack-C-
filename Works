#include <iostream>
#include <fstream>
#include <string>
#include <vector>
#include <functional>
using namespace std;

 
int max(int a, int b) { return (a > b)? a : b; }


int main() {
    //string l;
    int i = 0, c, no, x, y, z, line;
    std::vector<int>value;
    std::vector<int>weight;
    std::cout<<"give the name of the file :";
    std::cin >> l;

    std::ifstream myfile(l);
    if (myfile.is_open())
    {
        while (myfile >> line)
        {
            if (i == 0) {
                no = line; 
                if (no==0)
                {
                    myfile.close();break;
                } 
                //items.reserve(no);/*cout << no <<endl;*/
            }
            else if (i == (no * 3) + 1) { c = line;/*cout << c <<endl;*/ }
            else {
                if (i % 3 == 1) { x=line;}
                else if (i % 3 == 2) {value.push_back(line);/* y = line; A[b][0]=line;cout<<A[b][0]<<" , ";*/ }
                else { weight.push_back(line); }//items.emplace_back(x, y, z); z = line; 
                //vec.push_back(MyStruct(4, 1.2, "test"));
            }
            i++;
        }
        for (int i = 0; i < value.size(); i++) { cout << i+1 << " - " << value[i] << " - " << weight[i] << endl; }
        
       int kp[no + 1][c + 1];
        for (int i = 0; i <= no; i++) {
            for (int w = 0; w <= c; w++){
                if (i == 0 || w == 0){ kp[i][w]=0;}
                else if (weight[i - 1] <= w){kp[i][w]=max(value[i - 1] + kp[i - 1][w - weight[i - 1]], kp[i - 1][w]);}
                else{kp[i][w]=kp[i - 1][w];}
            }
            
        }
        cout << kp[no][c]<<endl;
       
        myfile.close();
    }
    else cout << "Unable to open file";
    
    return 0;
}
